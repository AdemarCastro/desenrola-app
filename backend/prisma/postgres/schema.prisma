// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_POSTGRESQL_URL")
}


model Usuario {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  primeiro_nome   String
  sobrenome       String
  senha           String
  data_nascimento DateTime
  avatar_url      String?  @default("https://desenrola.com/default-avatar.png")
  status_id       Int
  nivel_acesso_id Int
  cargo_id         Int?

  logout_em     DateTime?
  criado_em     DateTime  @default(now())
  atualizado_em DateTime  @updatedAt
  apagado_em    DateTime?

  status       StatusUsuario    @relation(fields: [status_id], references: [id])
  nivel_acesso NivelAcesso      @relation(fields: [nivel_acesso_id], references: [id])
  cargo        Cargo?           @relation(fields: [cargo_id], references: [id], onDelete: SetNull)
  projetos     ProjetoUsuario[] @relation("ProjetosDoUsuario")
  tarefas      TarefaUsuario[]  @relation("ResponsaveisPelaTarefa")
  comentarios  Comentario[]     @relation("ComentariosDoUsuario")

  @@index([status_id])
  @@index([nivel_acesso_id])
  @@index([cargo_id])
}


model Cargo {
  id       Int       @id @default(autoincrement())
  nome     String    @unique
  usuarios Usuario[]
}

model NivelAcesso {
  id             Int              @id @default(autoincrement())
  nome           String           @unique
  usuarios       Usuario[]
  projetoUsuario ProjetoUsuario[]
}

model StatusUsuario {
  id       Int       @id @default(autoincrement())
  nome     String    @unique
  usuarios Usuario[]
}

model Projeto {
  id            Int       @id @default(autoincrement())
  nome          String
  descricao     String?
  data_entrega  DateTime?
  concluido_em  DateTime?
  criado_em     DateTime  @default(now())
  atualizado_em DateTime  @updatedAt
  apagado_em    DateTime?

  usuarios ProjetoUsuario[] @relation("UsuariosDoProjeto")
  tarefas  Tarefa[]
}

model ProjetoUsuario {
  usuario_id      Int
  projeto_id      Int
  nivel_acesso_id Int

  criado_em     DateTime  @default(now())
  atualizado_em DateTime  @updatedAt
  apagado_em    DateTime?

  usuario     Usuario     @relation("ProjetosDoUsuario", fields: [usuario_id], references: [id], onDelete: Cascade)
  projeto     Projeto     @relation("UsuariosDoProjeto", fields: [projeto_id], references: [id], onDelete: Cascade)
  nivelAcesso NivelAcesso @relation(fields: [nivel_acesso_id], references: [id])

  @@id([usuario_id, projeto_id])
  @@index([projeto_id])
  @@index([usuario_id])
}

model StatusTarefa {
  id      Int      @id @default(autoincrement())
  nome    String   @unique
  tarefas Tarefa[]
}

model PrioridadeTarefa {
  id      Int      @id @default(autoincrement())
  nome    String   @unique
  tarefas Tarefa[]
}

model Tarefa {
  id            Int       @id @default(autoincrement())
  descricao     String
  status_id     Int
  prioridade_id Int
  id_projeto    Int
  data_inicio   DateTime?
  data_fim      DateTime?
  concluido_em  DateTime?
  criado_em     DateTime  @default(now())
  atualizado_em DateTime  @updatedAt
  apagado_em    DateTime?

  projeto      Projeto          @relation(fields: [id_projeto], references: [id], onDelete: Cascade)
  status       StatusTarefa     @relation(fields: [status_id], references: [id])
  prioridade   PrioridadeTarefa @relation(fields: [prioridade_id], references: [id])
  comentarios  Comentario[]
  responsaveis TarefaUsuario[]  @relation("ResponsaveisPelaTarefa")
  tags         Tag[]
  anexos       Anexo[]

  @@index([id_projeto])
  @@index([status_id])
  @@index([prioridade_id])
}

model TarefaUsuario {
  tarefa_id  Int
  usuario_id Int
  criado_em  DateTime @default(now())

  tarefa  Tarefa  @relation("ResponsaveisPelaTarefa", fields: [tarefa_id], references: [id], onDelete: Cascade)
  usuario Usuario @relation("ResponsaveisPelaTarefa", fields: [usuario_id], references: [id], onDelete: Cascade)

  @@id([tarefa_id, usuario_id])
  @@index([usuario_id])
}

model Comentario {
  id            Int       @id @default(autoincrement())
  conteudo      String
  id_tarefa     Int
  id_usuario    Int
  criado_em     DateTime  @default(now())
  atualizado_em DateTime  @updatedAt
  apagado_em    DateTime?

  tarefa  Tarefa  @relation(fields: [id_tarefa], references: [id], onDelete: Cascade)
  usuario Usuario @relation("ComentariosDoUsuario", fields: [id_usuario], references: [id], onDelete: Cascade)

  @@index([id_tarefa])
  @@index([id_usuario])
}

model Tag {
  id      Int      @id @default(autoincrement())
  nome    String   @unique
  tarefas Tarefa[]
}

model Anexo {
  id           Int      @id @default(autoincrement())
  url          String
  nome_arquivo String
  tipo_arquivo String
  id_tarefa    Int
  criado_em    DateTime @default(now())

  tarefa Tarefa @relation(fields: [id_tarefa], references: [id], onDelete: Cascade)

  @@index([id_tarefa])
}