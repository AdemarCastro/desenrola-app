// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Usuario {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  primeiro_nome   String
  sobrenome       String
  senha           String
  data_nascimento DateTime
  idade           Int?     @default(0)
  status_id       Int
  logout_em       DateTime?
  criado_em       DateTime @default(now())
  atualizado_em   DateTime @updatedAt
  apagado_em      DateTime?

  status      StatusUsuario @relation(fields: [status_id], references: [id])
  papeis      UsuarioPapel[]
  projetos    ProjetoUsuario[]
  comentarios Comentario[]
}

model Papel {
  id        Int     @id @default(autoincrement())
  nome      String  @unique
  descricao String?

  usuarios   UsuarioPapel[]
  permissoes PapelPermissao[]
  projetos   ProjetoUsuario[]
}

model UsuarioPapel {
  id_usuario     Int
  id_papel       Int
  cargo          String
  limite_projeto Int?   @default(5)
  atribuido_em   DateTime @default(now())

  usuario Usuario @relation(fields: [id_usuario], references: [id])
  papel   Papel   @relation(fields: [id_papel], references: [id])

  @@id([id_usuario, id_papel])
}

model Permissao {
  id        Int     @id @default(autoincrement())
  acao      String  @unique
  descricao String?

  papeis PapelPermissao[]
}

model PapelPermissao {
  id_papel     Int
  id_permissao Int

  papel     Papel     @relation(fields: [id_papel], references: [id])
  permissao Permissao @relation(fields: [id_permissao], references: [id])

  @@id([id_papel, id_permissao])
}

model Projeto {
  id            Int       @id @default(autoincrement())
  nome          String
  descricao     String?
  data_entrega  DateTime?
  criado_em     DateTime  @default(now())
  atualizado_em DateTime  @updatedAt
  apagado_em    DateTime?

  usuarios ProjetoUsuario[]
  tarefas  Tarefa[]
}

model ProjetoUsuario {
  id_projeto   Int
  id_usuario   Int
  id_papel     Int
  vinculado_em DateTime @default(now())

  projeto Projeto @relation(fields: [id_projeto], references: [id])
  usuario Usuario @relation(fields: [id_usuario], references: [id])
  papel   Papel   @relation(fields: [id_papel], references: [id])

  @@id([id_projeto, id_usuario, id_papel])
}

model StatusTarefa {
  id     Int    @id @default(autoincrement())
  nome   String @unique
  tarefas Tarefa[]
}

model PrioridadeTarefa {
  id     Int    @id @default(autoincrement())
  nome   String @unique
  tarefas Tarefa[]
}

model Tarefa {
  id                  Int      @id @default(autoincrement())
  descricao           String
  status_id           Int
  prioridade_id       Int
  criado_em           DateTime @default(now())
  atualizado_em       DateTime @updatedAt
  apagado_em          DateTime?

  status              StatusTarefa @relation(fields: [status_id], references: [id])
  prioridade          PrioridadeTarefa @relation(fields: [prioridade_id], references: [id])
  projeto             Projeto @relation(fields: [id_projeto], references: [id])
  id_projeto          Int

  comentarios         Comentario[]
}

model StatusUsuario {
  id      Int      @id @default(autoincrement())
  nome    String   @unique
  usuarios Usuario[]
}

model Comentario {
  id            Int       @id @default(autoincrement())
  conteudo      String
  criado_em     DateTime  @default(now())
  atualizado_em DateTime  @updatedAt
  apagado_em    DateTime?

  tarefa    Tarefa @relation(fields: [id_tarefa], references: [id])
  id_tarefa Int

  usuario    Usuario @relation(fields: [id_usuario], references: [id])
  id_usuario Int
}