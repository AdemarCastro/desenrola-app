services:
  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
        PORT: ${PORT_BACKEND}
        SALT_ROUNDS: ${SALT_ROUNDS}
    volumes:
      - backend-db-data:/app/database
    env_file:
      - ./.env
    ports:
      - '${PORT_BACKEND}:${PORT_BACKEND}'
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
        PORT: ${PORT_FRONTEND}
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    env_file:
      - ./.env
    ports:
      - '${PORT_FRONTEND}:${PORT_FRONTEND}'
    depends_on:
      - backend
    networks:
      - app-network

  prisma-studio:
    build:
      context: ./backend
      dockerfile: dockerfile
      args:
        PRISMA_STUDIO_PORT: ${PRISMA_STUDIO_PORT}
    env_file:
      - ./.env
    volumes:
      - backend-db-data:/app/database
    command: >
      sh -c "npx prisma studio --schema=prisma/schema.prisma --port=5555 --hostname=0.0.0.0"
    ports:
      - "${PRISMA_STUDIO_PORT}:${PRISMA_STUDIO_PORT}"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  backend-db-data:
    driver: local

networks:
  app-network:
    driver: bridge